clc; clear; close all;

% โหลดข้อมูลจาก Excel
file_path = 'C:\Users\krits\Desktop\import\weather\100perdata.xlsx';
data = readtable(file_path);

% ลบคอลัมน์ Date ออก
data.Date = [];

% เพิ่ม Feature Engineering (Lag Features)
data.Rainfall_Lag1 = [NaN; data.Rainfall(1:end-1)];
data.Rainfall_Lag2 = [NaN; NaN; data.Rainfall(1:end-2)];
data.Rainfall_Lag3 = [NaN; NaN; NaN; data.Rainfall(1:end-3)];

% แยกตัวแปรอิสระ (X) และตัวแปรเป้าหมาย (y)
X = data{:, 1:end-1};  % ตัวแปรอิสระ
y = data.Rainfall;     % ตัวแปรเป้าหมาย
data.Rainfall = [];

%  แบ่งข้อมูลเป็น Training (80%) และ Testing (20%) 
n = size(X,1);
train_size = round(0.8 * n);
X_train = X(1:train_size, :);
y_train = y(1:train_size, :);
X_test = X(train_size+1:end, :);
y_test = y(train_size+1:end, :);

% Standardization ให้ข้อมูล (Min-Max Scaling)
[X_train_scaled, ps] = mapminmax(X_train');
X_train_scaled = X_train_scaled';
X_test_scaled = mapminmax('apply', X_test', ps)';

% สร้างโมเดล SVM Regression (Gaussian)
mdl_svm = fitrsvm(X_train_scaled, y_train, 'KernelFunction', 'linear', ...
    'BoxConstraint', 2, 'Epsilon', 0.05);

% ทำนายผลใหม่
y_train_pred = predict(mdl_svm, X_train_scaled);
y_test_pred = predict(mdl_svm, X_test_scaled);

% ป้องกันค่าพยากรณ์ติดลบ (Clip Min Value = 0)
y_train_pred(y_train_pred < 0) = 0;
y_test_pred(y_test_pred < 0) = 0;


% ฟังก์ชันจัดกลุ่มค่าฝน
define_category = @(x) ...
    (x < 0.1) * 1 + ... % วัดผลไม่ได้
    (x >= 0.1 & x <= 10) * 2 + ... % ฝนตกน้อย
    (x > 10 & x <= 35) * 3 + ... % ฝนตกปานกลาง
    (x > 35 & x <= 90) * 4 + ... % ฝนตกหนัก
    (x > 90) * 5; % ฝนตกหนักมาก

% แปลงค่าฝนเป็นประเภท
actual_labels = arrayfun(define_category, y_test);
predicted_labels = arrayfun(define_category, y_test_pred);

% คำนวณ Confusion Matrix
conf_mat = confusionmat(actual_labels, predicted_labels);
disp('Confusion Matrix:');
disp(conf_mat);

% คำนวณตัวชี้วัด Accuracy, Precision, Recall, F1-Score
num_classes = size(conf_mat, 1);
precision = zeros(num_classes, 1);
recall = zeros(num_classes, 1);
f1_score = zeros(num_classes, 1);

category_names = {'ฝนวัดจำนวนไม่ได้', 'ฝนตกน้อย', 'ฝนตกปานกลาง', 'ฝนตกหนัก', 'ฝนตกหนักมาก'};

for i = 1:num_classes
    TP = conf_mat(i, i);
    FP = sum(conf_mat(:, i)) - TP;
    FN = sum(conf_mat(i, :)) - TP;
    TN = sum(conf_mat(:)) - (TP + FP + FN);
    
    precision(i) = TP / (TP + FP + eps);
    recall(i) = TP / (TP + FN + eps);
    f1_score(i) = 2 * (precision(i) * recall(i)) / (precision(i) + recall(i) + eps);
end

accuracy = sum(diag(conf_mat)) / sum(conf_mat(:));

% แสดงผลตัวชี้วัด
fprintf('\nModel Performance Metrics:\n');
fprintf('Accuracy: %.4f\n', accuracy);
for i = 1:num_classes
    fprintf('%s - Precision: %.4f, Recall: %.4f, F1-Score: %.4f\n', ...
        category_names{i}, precision(i), recall(i), f1_score(i));
end